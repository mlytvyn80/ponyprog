# Generate NSIS installer
INSTALL(PROGRAMS "${CURRENT_BUILD_DIR}/ponyprog.exe" 
        DESTINATION "bin/" 
        COMPONENT "application" 
        PERMISSIONS OWNER_EXECUTE OWNER_WRITE OWNER_READ GROUP_EXECUTE GROUP_READ WORLD_EXECUTE WORLD_READ
        )

INSTALL(DIRECTORY "${PROJECT_SOURCE_DIR}/icons/"    
        DESTINATION "share/icons/" 
        COMPONENT "application" 
        DIRECTORY_PERMISSIONS OWNER_EXECUTE OWNER_WRITE OWNER_READ GROUP_EXECUTE GROUP_READ WORLD_EXECUTE WORLD_READ 
        FILES_MATCHING PATTERN "*.png"
        )

INSTALL(DIRECTORY "${PROJECT_SOURCE_DIR}/lang/" 
        DESTINATION "share/ponyprog/lang/" 
        COMPONENT "lang files" 
        DIRECTORY_PERMISSIONS OWNER_EXECUTE OWNER_WRITE OWNER_READ GROUP_EXECUTE GROUP_READ WORLD_EXECUTE WORLD_READ 
        FILES_MATCHING PATTERN "*.utf"
        ) 

INSTALL(DIRECTORY "${PROJECT_SOURCE_DIR}/distribution/innosetup/" 
        DESTINATION "share/doc/ponyprog/" 
        COMPONENT "help files" 
        DIRECTORY_PERMISSIONS OWNER_EXECUTE OWNER_WRITE OWNER_READ GROUP_EXECUTE GROUP_READ WORLD_EXECUTE WORLD_READ 
        FILES_MATCHING PATTERN "*.jpg" PATTERN "*.html"
        ) 
        
CONFIGURE_FILE(${CMAKE_CURRENT_SOURCE_DIR}/package-binary-nsis.cpack.in ${CMAKE_CURRENT_BINARY_DIR}/package-binary-nsis.cpack)
ADD_CUSTOM_TARGET(package-binary-nsis
	${CMAKE_CPACK_COMMAND}
	--config ${CMAKE_CURRENT_BINARY_DIR}/package-binary-nsis.cpack
	)


INCLUDE(CPack)
